Index: linux-2.6.32.i386/fs/ext4/super.c
===================================================================
--- linux-2.6.32.i386.orig/fs/ext4/super.c	2010-04-07 14:18:32.000000000 +0530
+++ linux-2.6.32.i386/fs/ext4/super.c	2010-04-07 14:19:47.000000000 +0530
@@ -291,6 +291,8 @@
 	jbd2_journal_abort_handle(handle);
 }
 
+EXPORT_SYMBOL(ext4_journal_abort_handle);
+
 /* Deal with the reporting of failure conditions on a filesystem such as
  * inconsistencies detected or read IO failures.
  *
@@ -3030,6 +3032,8 @@
 	return ret;
 }
 
+EXPORT_SYMBOL(ext4_force_commit);
+
 /*
  * Setup any per-fs journal parameters now.  We'll do this both on
  * initial mount, once the journal has been initialised but before we've
@@ -4088,6 +4092,12 @@
 			unsigned long *blocks, int *created, int create);
 EXPORT_SYMBOL(ext4_map_inode_page);
 
+EXPORT_SYMBOL(ext4_xattr_get);
+EXPORT_SYMBOL(ext4_xattr_set_handle);
+EXPORT_SYMBOL(ext4_bread);
+EXPORT_SYMBOL(ext4_journal_start_sb);
+EXPORT_SYMBOL(__ext4_journal_stop);
+
 MODULE_AUTHOR("Remy Card, Stephen Tweedie, Andrew Morton, Andreas Dilger, Theodore Ts'o and others");
 MODULE_DESCRIPTION("Fourth Extended Filesystem");
 MODULE_LICENSE("GPL");
Index: linux-2.6.32.i386/fs/ext4/ext4.h
===================================================================
--- linux-2.6.32.i386.orig/fs/ext4/ext4.h	2010-04-07 14:17:04.000000000 +0530
+++ linux-2.6.32.i386/fs/ext4/ext4.h	2010-04-07 14:20:34.000000000 +0530
@@ -1385,6 +1385,8 @@
 				       struct buffer_head *bh,
 				       ext4_group_t group,
 				       struct ext4_group_desc *desc);
+extern struct buffer_head *ext4_read_inode_bitmap(struct super_block *sb,
+						  ext4_group_t block_group);
 extern void mark_bitmap_end(int start_bit, int end_bit, char *bitmap);
 
 /* mballoc.c */
Index: linux-2.6.32.i386/fs/ext4/ialloc.c
===================================================================
--- linux-2.6.32.i386.orig/fs/ext4/ialloc.c	2009-12-03 09:21:21.000000000 +0530
+++ linux-2.6.32.i386/fs/ext4/ialloc.c	2010-04-07 14:19:47.000000000 +0530
@@ -98,7 +98,7 @@
  *
  * Return buffer_head of bitmap on success or NULL.
  */
-static struct buffer_head *
+struct buffer_head *
 ext4_read_inode_bitmap(struct super_block *sb, ext4_group_t block_group)
 {
 	struct ext4_group_desc *desc;
@@ -161,6 +161,7 @@
 	}
 	return bh;
 }
+EXPORT_SYMBOL(ext4_read_inode_bitmap);
 
 /*
  * NOTE! When we get the inode, we're the only people
Index: linux-2.6.32.i386/fs/ext4/balloc.c
===================================================================
--- linux-2.6.32.i386.orig/fs/ext4/balloc.c	2010-03-19 15:43:37.000000000 +0530
+++ linux-2.6.32.i386/fs/ext4/balloc.c	2010-04-07 14:19:47.000000000 +0530
@@ -235,6 +235,7 @@
 		*bh = sbi->s_group_desc[group_desc];
 	return desc;
 }
+EXPORT_SYMBOL(ext4_get_group_desc);
 
 static int ext4_valid_block_bitmap(struct super_block *sb,
 					struct ext4_group_desc *desc,
